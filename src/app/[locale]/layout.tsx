import { NuqsAdapter } from 'nuqs/adapters/next/app'
import { ThemeProvider } from '@/components/providers/theme'
import { Toaster } from '@/components/ui/sonner'
import { routing } from '@/i18n/routing'
import type { Metadata } from 'next'
import { hasLocale, NextIntlClientProvider } from 'next-intl'
import { Geist, Geist_Mono } from 'next/font/google'
import '../globals.css'
import AuthProvider from '@/components/providers/auth'
import { authService } from '@/service/auth/service'

const geistSans = Geist({
	variable: '--font-geist-sans',
	subsets: ['latin'],
})

const geistMono = Geist_Mono({
	variable: '--font-geist-mono',
	subsets: ['latin'],
})

export const metadata: Metadata = {
	title: 'Create Next App',
	description: 'Generated by create next app',
}

export function generateStaticParams() {
	return routing.locales.map(locale => ({ locale }))
}

export default async function RootLayout({
	children,
	params,
}: Readonly<{
	children: React.ReactNode
	params: Promise<{ locale: string }>
}>) {
	const { locale } = await params
	if (!hasLocale(routing.locales, locale)) {
		console.log('locale not found', locale)
	}

	const data = await authService.verify()

	return (
		<html lang='en' suppressHydrationWarning>
			<body
				className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
				<NuqsAdapter>
					<NextIntlClientProvider>
						<AuthProvider
							session={data.session}
							user={data.user}
							tenant={data.tenant}>
							<ThemeProvider
								attribute='class'
								defaultTheme='system'
								enableSystem
								disableTransitionOnChange>
								{children}
								<Toaster position='top-center' />
							</ThemeProvider>
						</AuthProvider>
					</NextIntlClientProvider>
				</NuqsAdapter>
			</body>
		</html>
	)
}
